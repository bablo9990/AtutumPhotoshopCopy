# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PIL.ImageFilter import (
   BLUR, CONTOUR, DETAIL, EDGE_ENHANCE, EDGE_ENHANCE_MORE,
   EMBOSS, FIND_EDGES, SMOOTH, SMOOTH_MORE, SHARPEN,
   GaussianBlur, UnsharpMask
)
from PIL import Image, ImageFilter
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QFileDialog, QMessageBox


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(703, 502)
        MainWindow.setWindowIcon(QtGui.QIcon("photo.png"))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(10, 10, 10, 10)
        self.gridLayout.setSpacing(5)
        self.gridLayout.setObjectName("gridLayout")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 681, 429))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.PicContainer = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.PicContainer.setStyleSheet("background-color: rgb(53, 53, 53);")
        self.PicContainer.setText("")
        self.PicContainer.setObjectName("PicContainer")
        self.gridLayout_2.addWidget(self.PicContainer, 0, 1, 2, 1)
        self.toolBox = QtWidgets.QToolBox(self.scrollAreaWidgetContents)
        self.toolBox.setMaximumSize(QtCore.QSize(100, 16777215))
        self.toolBox.setStyleSheet("background-color: rgb(45, 45, 45);")
        self.toolBox.setObjectName("toolBox")
        self.Page1 = QtWidgets.QWidget()
        self.Page1.setGeometry(QtCore.QRect(0, 0, 98, 28))
        self.Page1.setFocusPolicy(QtCore.Qt.NoFocus)
        self.Page1.setObjectName("Page1")
        self.greyButton = QtWidgets.QPushButton(self.Page1)
        self.greyButton.setGeometry(QtCore.QRect(0, 0, 101, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.greyButton.setFont(font)
        self.greyButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.greyButton.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));\n"
"")
        self.greyButton.setObjectName("greyButton")
        self.ShapePLusButton = QtWidgets.QPushButton(self.Page1)
        self.ShapePLusButton.setGeometry(QtCore.QRect(0, 30, 101, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.ShapePLusButton.setFont(font)
        self.ShapePLusButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ShapePLusButton.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));")
        self.ShapePLusButton.setObjectName("ShapePLusButton")
        self.ShapeMinusButton = QtWidgets.QPushButton(self.Page1)
        self.ShapeMinusButton.setGeometry(QtCore.QRect(0, 60, 101, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.ShapeMinusButton.setFont(font)
        self.ShapeMinusButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ShapeMinusButton.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));")
        self.ShapeMinusButton.setObjectName("ShapeMinusButton")
        self.BlurButton = QtWidgets.QPushButton(self.Page1)
        self.BlurButton.setGeometry(QtCore.QRect(0, 90, 101, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.BlurButton.setFont(font)
        self.BlurButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.BlurButton.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));")
        self.BlurButton.setObjectName("BlurButton")
        self.InversionButton = QtWidgets.QPushButton(self.Page1)
        self.InversionButton.setGeometry(QtCore.QRect(0, 120, 101, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.InversionButton.setFont(font)
        self.InversionButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.InversionButton.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));")
        self.InversionButton.setObjectName("InversionButton")
        self.InversionGreyButton = QtWidgets.QPushButton(self.Page1)
        self.InversionGreyButton.setGeometry(QtCore.QRect(0, 150, 101, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(8)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.InversionGreyButton.setFont(font)
        self.InversionGreyButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.InversionGreyButton.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));")
        self.InversionGreyButton.setObjectName("InversionGreyButton")
        self.SovetButton = QtWidgets.QPushButton(self.Page1)
        self.SovetButton.setGeometry(QtCore.QRect(0, 180, 101, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.SovetButton.setFont(font)
        self.SovetButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SovetButton.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));")
        self.SovetButton.setObjectName("SovetButton")
        self.toolBox.addItem(self.Page1, "")
        self.Page2 = QtWidgets.QWidget()
        self.Page2.setGeometry(QtCore.QRect(0, 0, 100, 314))
        self.Page2.setObjectName("Page2")
        self.LeftRotate = QtWidgets.QPushButton(self.Page2)
        self.LeftRotate.setGeometry(QtCore.QRect(0, 0, 93, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        self.LeftRotate.setFont(font)
        self.LeftRotate.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.LeftRotate.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));")
        self.LeftRotate.setObjectName("LeftRotate")
        self.RightRotate = QtWidgets.QPushButton(self.Page2)
        self.RightRotate.setGeometry(QtCore.QRect(0, 30, 93, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        self.RightRotate.setFont(font)
        self.RightRotate.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));")
        self.RightRotate.setObjectName("RightRotate")
        self.MirrorButton = QtWidgets.QPushButton(self.Page2)
        self.MirrorButton.setGeometry(QtCore.QRect(0, 60, 93, 28))
        font = QtGui.QFont()
        font.setFamily("Playball")
        font.setPointSize(10)
        self.MirrorButton.setFont(font)
        self.MirrorButton.setStyleSheet("background-color: rgb(68, 68, 68);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 15px;\n"
"letter-spacing: 2px;\n"
"background-size: 200% auto;\n"
"box-shadow: 0 0 20px rgba(0, 0, 0, .1);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.970149 rgba(49, 49, 49, 255), stop:0.995025 rgba(255, 255, 255, 255));\n"
"")
        self.MirrorButton.setObjectName("MirrorButton")
        self.toolBox.addItem(self.Page2, "")
        self.Page3 = QtWidgets.QWidget()
        self.Page3.setObjectName("Page3")
        self.listWidget = QtWidgets.QListWidget(self.Page3)
        self.listWidget.setGeometry(QtCore.QRect(10, 0, 81, 192))
        self.listWidget.setObjectName("listWidget")
        self.toolBox.addItem(self.Page3, "")
        self.gridLayout_2.addWidget(self.toolBox, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 703, 26))
        self.menubar.setObjectName("menubar")
        self.menuopen = QtWidgets.QMenu(self.menubar)
        self.menuopen.setObjectName("menuopen")
        self.menuNew = QtWidgets.QMenu(self.menubar)
        self.menuNew.setObjectName("menuNew")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew_Ctrl_N = QtWidgets.QAction(MainWindow)
        self.actionNew_Ctrl_N.setObjectName("actionNew_Ctrl_N")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave_Ctrl_S = QtWidgets.QAction(MainWindow)
        self.actionSave_Ctrl_S.setObjectName("actionSave_Ctrl_S")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionSave_All_Ctrl_Shift_Alt = QtWidgets.QAction(MainWindow)
        self.actionSave_All_Ctrl_Shift_Alt.setObjectName("actionSave_All_Ctrl_Shift_Alt")
        self.actionClose_Alt_F4 = QtWidgets.QAction(MainWindow)
        self.actionClose_Alt_F4.setObjectName("actionClose_Alt_F4")
        self.actionUndo_Ctrl_Z = QtWidgets.QAction(MainWindow)
        self.actionUndo_Ctrl_Z.setObjectName("actionUndo_Ctrl_Z")
        self.actionDo_again_Ctrl_Shift_Z = QtWidgets.QAction(MainWindow)
        self.actionDo_again_Ctrl_Shift_Z.setObjectName("actionDo_again_Ctrl_Shift_Z")
        self.actionRedo_Ctrl_Y = QtWidgets.QAction(MainWindow)
        self.actionRedo_Ctrl_Y.setObjectName("actionRedo_Ctrl_Y")
        self.actionCopy_Ctrl_C = QtWidgets.QAction(MainWindow)
        self.actionCopy_Ctrl_C.setObjectName("actionCopy_Ctrl_C")
        self.actionCut_Ctrl_X = QtWidgets.QAction(MainWindow)
        self.actionCut_Ctrl_X.setObjectName("actionCut_Ctrl_X")
        self.actionPaste_Ctrl_V = QtWidgets.QAction(MainWindow)
        self.actionPaste_Ctrl_V.setObjectName("actionPaste_Ctrl_V")
        self.actionChange = QtWidgets.QAction(MainWindow)
        self.actionChange.setObjectName("actionChange")
        self.actionInstall = QtWidgets.QAction(MainWindow)
        self.actionInstall.setObjectName("actionInstall")
        self.actionHelp_Dialog = QtWidgets.QAction(MainWindow)
        self.actionHelp_Dialog.setObjectName("actionHelp_Dialog")
        self.menuopen.addAction(self.actionNew_Ctrl_N)
        self.menuopen.addAction(self.actionOpen)
        self.menuopen.addAction(self.actionSave_Ctrl_S)
        self.menuopen.addAction(self.actionSave_As)
        self.menuopen.addAction(self.actionClose_Alt_F4)
        self.menuNew.addAction(self.actionUndo_Ctrl_Z)
        self.menuNew.addAction(self.actionDo_again_Ctrl_Shift_Z)
        self.menuHelp.addAction(self.actionHelp_Dialog)
        self.menubar.addAction(self.menuopen.menuAction())
        self.menubar.addAction(self.menuNew.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.MenuFunction()
        self.retranslateUi(MainWindow)
        self.toolBox.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.greyButton.setText(_translate("MainWindow", "Ч/Б"))
        self.ShapePLusButton.setText(_translate("MainWindow", "Резкость +"))
        self.ShapeMinusButton.setText(_translate("MainWindow", "Резкость -"))
        self.BlurButton.setText(_translate("MainWindow", "Размытие"))
        self.InversionButton.setText(_translate("MainWindow", "Инверсия"))
        self.InversionGreyButton.setText(_translate("MainWindow", "Инверсия Ч/Б"))
        self.SovetButton.setText(_translate("MainWindow", "Ретро"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.Page1), _translate("MainWindow", "Page 1"))
        self.LeftRotate.setText(_translate("MainWindow", "Лево"))
        self.RightRotate.setText(_translate("MainWindow", "Право"))
        self.MirrorButton.setText(_translate("MainWindow", "Зеркало"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.Page2), _translate("MainWindow", "Page 2"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.Page3), _translate("MainWindow", "Page"))
        self.menuopen.setTitle(_translate("MainWindow", "File"))
        self.menuNew.setTitle(_translate("MainWindow", "Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionNew_Ctrl_N.setText(_translate("MainWindow", "New...            Ctrl + N"))
        self.actionNew_Ctrl_N.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen.setText(_translate("MainWindow", "Open             Ctrl + O"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_Ctrl_S.setText(_translate("MainWindow", "Save              Ctrl + S"))
        self.actionSave_Ctrl_S.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As"))
        self.actionSave_As.setShortcut(_translate("MainWindow", "Backspace"))
        self.actionSave_All_Ctrl_Shift_Alt.setText(_translate("MainWindow", "Save All      Ctrl + Shift +Alt"))
        self.actionSave_All_Ctrl_Shift_Alt.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.actionClose_Alt_F4.setText(_translate("MainWindow", "Close          Alt + F4"))
        self.actionUndo_Ctrl_Z.setText(_translate("MainWindow", "Undo           Ctrl +Z"))
        self.actionUndo_Ctrl_Z.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionDo_again_Ctrl_Shift_Z.setText(_translate("MainWindow", "Do again    Ctrl + Shift + Z"))
        self.actionDo_again_Ctrl_Shift_Z.setShortcut(_translate("MainWindow", "Ctrl+Shift+Z"))
        self.actionRedo_Ctrl_Y.setText(_translate("MainWindow", "Redo           Ctrl + Y"))
        self.actionRedo_Ctrl_Y.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionCopy_Ctrl_C.setText(_translate("MainWindow", "Copy           Ctrl + C"))
        self.actionCopy_Ctrl_C.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionCut_Ctrl_X.setText(_translate("MainWindow", "Cut              Ctrl + X"))
        self.actionCut_Ctrl_X.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionPaste_Ctrl_V.setText(_translate("MainWindow", "Paste           Ctrl + V"))
        self.actionPaste_Ctrl_V.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionChange.setText(_translate("MainWindow", "Change"))
        self.actionInstall.setText(_translate("MainWindow", "Install"))
        self.actionHelp_Dialog.setText(_translate("MainWindow", "Help Dialog"))

    def MenuFunction(self):
        self.actionClose_Alt_F4.triggered.connect(self.Exit)
        self.actionOpen.triggered.connect(self.Open)
        self.actionHelp_Dialog.triggered.connect(self.Help)
        self.BlurButton.clicked.connect(self.Blur)
        self.greyButton.clicked.connect(self.Grey)

    def Exit(self):
        app.exit()
    def Open(self):
        def ch_work_dir():
            global workdir
            workdir = str()
            workdir = QFileDialog.getExistingDirectory()
        def filter1(files, extensions):
            result = list()
            for filename in files:
                for extension in extensions:
                    if filename.endswith(extension):
                        result.append(filename)
            return result


        extensions = ['.jpg', '.png']
        ch_work_dir()
        filenames = filter1(os.listdir(workdir), extensions)
        for filename in filenames:
            self.listWidget.addItem(filename)
        self.listWidget.currentRowChanged.connect(self.show_image)
    def show_image(self):
        self.PicContainer.hide()
        image_name = self.listWidget.currentItem().text()
        image_path = workdir + '/' + image_name
        self.Pixmap1 = QPixmap(image_path)
        print(image_path)
        global image
        image = Image.open(image_path)
        self.PicContainer.resize(self.Pixmap1.width(), self.Pixmap1.height())
        self.PicContainer.setPixmap(self.Pixmap1)
        self.PicContainer.show()
    def Help(self):
        self.short_window = QMessageBox()
        self.short_window.setWindowTitle("Help")
        self.short_window.setWindowIcon(QtGui.QIcon("photo.png"))
        self.short_window.setText("▶To open press file>open\n▶To undo udit>undo\n▶Support https://youtube.com")
        self.short_window.show()
    def Blur(self):
        Blur = image.filter(BLUR)
        if not (os.path.exists('D:/Рабочий стол/ModifiedImage/') and os.path.isdir('D:/Рабочий стол/ModifiedImage/')):
            print('Exiting...')
            os.mkdir('D:/Рабочий стол/ModifiedImage/')
        Blur.save('D:/Рабочий стол/ModifiedImage/blur.png')
        BlurPixmap = QPixmap('D:/Рабочий стол/ModifiedImage/blur.png')
        self.PicContainer.setPixmap(BlurPixmap)

    def Grey(self):
        Grey = image.convert('L')
        if not (os.path.exists('D:/Рабочий стол/ModifiedImage/') and os.path.isdir('D:/Рабочий стол/ModifiedImage/')):
            print('Exiting...')
            os.mkdir('D:/Рабочий стол/ModifiedImage/')
        Grey.save('D:/Рабочий стол/ModifiedImage/grey.png')
        GreyPixmap = QPixmap('D:/Рабочий стол/ModifiedImage/grey.png')
        self.PicContainer.setPixmap(GreyPixmap)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
